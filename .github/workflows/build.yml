name: Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  build:
    name: Deploy to npm
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm test

      - name: Build project
        run: pnpm build

      - name: Bump version (manual trigger only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
          git add package.json package-lock.json
          git commit -m "Bump version to $(node -p "require('./package.json').version")"
          git push

      - name: Check if version exists on npm
        id: check_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          
          if npm view "$PACKAGE_NAME@$PACKAGE_VERSION" version 2>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $PACKAGE_VERSION already exists on npm"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Version $PACKAGE_VERSION does not exist on npm, proceeding with publish"
          fi

      - name: Publish to npm
        if: steps.check_version.outputs.exists == 'false'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      - name: Skip publish (version exists)
        if: steps.check_version.outputs.exists == 'true'
        run: |
          echo "⚠️ Version ${{ steps.check_version.outputs.version }} already exists on npm"
          echo "Skipping publish to avoid 403 error"
